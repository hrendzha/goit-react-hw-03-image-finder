{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","services/imagesApi.js","App.js","js/scrollToNewImages.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","searchQuery","handleChange","e","setState","target","value","handleSubmit","preventDefault","onSubmit","props","this","className","s","searchBar","searchForm","type","btn","btnLabel","input","autoComplete","autoFocus","required","placeholder","onChange","Component","ImageGalleryItem","src","photoDescr","onModalOpen","largeImageUrl","image","alt","onClick","ImageGallery","photos","gallery","map","id","webformatURL","largeImageURL","tags","galleryItem","Button","Modal","handleKeyDown","code","onModalClose","handleOverlayClick","currentTarget","window","addEventListener","removeEventListener","overlay","modal","axios","defaults","baseURL","imagesApi","page","searchParams","URLSearchParams","key","q","per_page","orientation","image_type","get","then","res","data","hits","App","isLoaderVisible","isModalOpen","query","toggleLoader","prevState","handleFormSubmit","handleLoadMoreBtnClick","handleModalOpen","handleModalClose","prevProps","currentQuery","currentPage","prevQuery","prevPage","catch","error","console","log","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","Boolean","length","visible","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a5ac1566.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageGallery_gallery__gboaM\",\"galleryItem\":\"ImageGallery_galleryItem__zZSAU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2GjdW\",\"modal\":\"Modal_modal__P3_V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ImageGalleryItem_image__2xsbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3xaJM\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\n\nclass Searchbar extends Component {\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired,\n    };\n\n    state = {\n        searchQuery: '',\n    };\n\n    handleChange = e => this.setState({ searchQuery: e.target.value });\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        const { searchQuery } = this.state;\n        const { onSubmit } = this.props;\n\n        onSubmit(searchQuery);\n    };\n\n    render() {\n        const { searchQuery } = this.state;\n\n        return (\n            <header className={s.searchBar}>\n                <form className={s.searchForm} onSubmit={this.handleSubmit}>\n                    <button type=\"submit\" className={s.btn}>\n                        <span className={s.btnLabel}>Search</span>\n                    </button>\n\n                    <input\n                        className={s.input}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        required\n                        placeholder=\"Search images and photos\"\n                        value={searchQuery}\n                        onChange={this.handleChange}\n                    />\n                </form>\n            </header>\n        );\n    }\n}\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nfunction ImageGalleryItem({ src, photoDescr, onModalOpen, largeImageUrl }) {\n    return (\n        <img\n            className={s.image}\n            src={src}\n            alt={photoDescr}\n            onClick={() => onModalOpen(largeImageUrl)}\n        />\n    );\n}\n\nImageGalleryItem.propTypes = {\n    src: PropTypes.string.isRequired,\n    photoDescr: PropTypes.string.isRequired,\n    onModalOpen: PropTypes.func.isRequired,\n    largeImageUrl: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nfunction ImageGallery({ photos, onModalOpen }) {\n    return (\n        <ul className={s.gallery}>\n            {photos.map(\n                ({\n                    id,\n                    webformatURL: src,\n                    largeImageURL: largeImageUrl,\n                    tags: photoDescr,\n                }) => (\n                    <li className={s.galleryItem} key={id}>\n                        <ImageGalleryItem\n                            src={src}\n                            photoDescr={photoDescr}\n                            onModalOpen={onModalOpen}\n                            largeImageUrl={largeImageUrl}\n                        />\n                    </li>\n                ),\n            )}\n        </ul>\n    );\n}\n\nImageGallery.propTypes = {\n    photos: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n        }).isRequired,\n    ).isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nfunction Button({ onClick }) {\n    return (\n        <button className={s.btn} type=\"button\" onClick={onClick}>\n            Load more\n        </button>\n    );\n}\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nclass Modal extends Component {\n    static propTypes = {\n        largeImageUrl: PropTypes.string.isRequired,\n        onModalClose: PropTypes.func.isRequired,\n    };\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = e => {\n        if (e.code === 'Escape') {\n            this.props.onModalClose();\n        }\n    };\n\n    handleOverlayClick = ({ target, currentTarget }) => {\n        if (target === currentTarget) {\n            this.props.onModalClose();\n        }\n    };\n\n    render() {\n        const { largeImageUrl } = this.props;\n\n        return (\n            <div className={s.overlay} onClick={this.handleOverlayClick}>\n                <div className={s.modal}>\n                    <img src={largeImageUrl} alt=\"\" />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Modal;\n","import axios from 'axios';\n\nvar API_KEY = '23262939-6c0fd5a3da3fb9e3fdc7add54';\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nconst imagesApi = {\n    fetchWithQuery(searchQuery, page) {\n        const searchParams = new URLSearchParams({\n            key: API_KEY,\n            q: searchQuery,\n            page: page,\n            per_page: 12,\n            orientation: 'horizontal',\n            image_type: 'photo',\n        });\n\n        return axios.get(`?${searchParams}`).then(res =>\n            res.data.hits.map(({ id, webformatURL, largeImageURL, tags }) => ({\n                id,\n                webformatURL,\n                largeImageURL,\n                tags,\n            })),\n        );\n    },\n};\n\nexport { imagesApi };\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\nimport { imagesApi } from './services/imagesApi';\nimport scrollToNewImages from './js/scrollToNewImages';\n\nclass App extends Component {\n    state = {\n        photos: [],\n        isLoaderVisible: false,\n        isModalOpen: false,\n        largeImageUrl: '',\n        query: '',\n        page: 1,\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        const { query: currentQuery, page: currentPage } = this.state;\n        const { query: prevQuery, page: prevPage } = prevState;\n\n        if (currentQuery !== prevQuery) {\n            this.toggleLoader();\n\n            imagesApi\n                .fetchWithQuery(currentQuery, currentPage)\n                .then(photos => this.setState({ photos }))\n                .catch(error => console.log(error))\n                .finally(() => this.toggleLoader());\n        }\n\n        if (currentPage !== prevPage && currentPage !== 1) {\n            this.toggleLoader();\n\n            imagesApi\n                .fetchWithQuery(currentQuery, currentPage)\n                .then(photos => {\n                    this.setState(prevState => ({\n                        photos: [...prevState.photos, ...photos],\n                    }));\n\n                    scrollToNewImages();\n                })\n                .catch(error => console.log(error))\n                .finally(() => this.toggleLoader());\n        }\n    }\n\n    toggleLoader = () =>\n        this.setState(prevState => ({\n            isLoaderVisible: !prevState.isLoaderVisible,\n        }));\n\n    handleFormSubmit = query => this.setState({ query, page: 1 });\n\n    handleLoadMoreBtnClick = () =>\n        this.setState(prevState => ({ page: prevState.page + 1 }));\n\n    handleModalOpen = largeImageUrl =>\n        this.setState({\n            isModalOpen: true,\n            largeImageUrl,\n        });\n\n    handleModalClose = () => this.setState({ isModalOpen: false });\n\n    render() {\n        const { photos, isLoaderVisible, isModalOpen, largeImageUrl } =\n            this.state;\n\n        return (\n            <>\n                <Searchbar onSubmit={this.handleFormSubmit} />\n                <ImageGallery\n                    photos={photos}\n                    onModalOpen={this.handleModalOpen}\n                />\n                {Boolean(photos.length) && !isLoaderVisible && (\n                    <Button onClick={this.handleLoadMoreBtnClick} />\n                )}\n                <Loader\n                    className=\"loader\"\n                    visible={isLoaderVisible}\n                    type=\"ThreeDots\"\n                    color=\"#00BFFF\"\n                    height={80}\n                    width={80}\n                />\n                {isModalOpen && (\n                    <Modal\n                        largeImageUrl={largeImageUrl}\n                        onModalClose={this.handleModalClose}\n                    />\n                )}\n            </>\n        );\n    }\n}\n\nexport default App;\n","export default function scrollToNewImages() {\n    window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n    });\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"Searchbar_searchBar__3w0z0\",\"searchForm\":\"Searchbar_searchForm__23jwf\",\"btn\":\"Searchbar_btn__37Gab\",\"btnLabel\":\"Searchbar_btnLabel__2RFBj\",\"input\":\"Searchbar_input__2C4aO\"};"],"sourceRoot":""}